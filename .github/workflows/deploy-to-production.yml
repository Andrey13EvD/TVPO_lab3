name: Deploy to Production

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        
    - name: Run tests
      run: |
        pytest .
      
    - name: Build Docker image
      run: |
        docker build -t my-app .
      
    - name: Push Docker image to registry
      run: |
        echo ${{ secrets.DOCKER_REGISTRY_USERNAME }} | docker login -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password-stdin ${{ secrets.DOCKER_REGISTRY_URL }}
        docker push ${{ secrets.DOCKER_REGISTRY_URL }}/my-app:${{ github.sha }}
      
    - name: Deploy to production
      run: |
        ssh root@production-server "docker pull ${{ secrets.DOCKER_REGISTRY_URL }}/my-app:${{ github.sha }}"
        ssh root@production-server "docker stop my-app"
        ssh root@production-server "docker rm my-app"
        ssh root@production-server "docker run -d --name my-app ${{ secrets.DOCKER_REGISTRY_URL }}/my-app:${{ github.sha }}"

  deploy-to-production:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
      
    - name: Deploy to production
      run: |
        ssh root@production-server "docker pull ${{ secrets.DOCKER_REGISTRY_URL }}/my-app:${{ github.sha }}"
        ssh root@production-server "docker stop my-app"
        ssh root@production-server "docker rm my-app"
        ssh root@production-server "docker run -d --name my-app ${{ secrets.DOCKER_REGISTRY_URL }}/my-app:${{ github.sha }}"
